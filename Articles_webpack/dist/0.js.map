{"version":3,"sources":["webpack:///./scripts/newsRequester.js"],"names":["_constants","__webpack_require__","requesterInstance","NewsRequester","selectedValues","_classCallCheck","this","_source","source","_endpoint","endpoint","_language","language","_country","country","_searchString","searchString","url","_getNewsUrl","fetch","then","response","json","catch","error","_getEndpoint","API_CONSTANTS","URL_TO_API","API_KEY"],"mappings":"4VAAAA,EAAAC,EAAA,GAEIC,EAAoB,KAKHC,aAKjB,SAAAA,EAAYC,GAWR,mGAXwBC,CAAAC,KAAAH,GACnBD,IACDA,EAAoBI,MAGxBJ,EAAkBK,QAAUH,EAAeI,OAC3CN,EAAkBO,UAAYL,EAAeM,SAC7CR,EAAkBS,UAAYP,EAAeQ,SAC7CV,EAAkBW,SAAWT,EAAeU,QAC5CZ,EAAkBa,cAAgBX,EAAeY,aAE1Cd,kDAwBP,IAAMe,EAAMX,KAAKY,cACjB,OAAOC,MAAMF,GACRG,KAAK,SAAUC,GACZ,OAAOA,EAASC,SAEnBF,KAAK,SAAUC,GACZ,OAAOA,IAEVE,MAAM,SAAUC,GACb,OAAQA,0CAQhB,IAAMd,EAAWJ,KAAKmB,eAClBR,KAASjB,EAAA0B,cAAcC,WAAajB,EAApC,IAAgDJ,KAAKC,QAArD,WAAuEP,EAAA0B,cAAcE,QAczF,OAZItB,KAAKS,gBACLE,EAASA,EAAT,MAAkBX,KAAKS,eAGvBT,KAAKK,YACLM,EAASA,EAAT,aAAyBX,KAAKK,WAG9BL,KAAKO,WACLI,EAASA,EAAT,YAAwBX,KAAKO,UAG1BI,yCAQP,IAAIP,SAEJ,OAAQJ,KAAKG,WACT,IAAK,gBACDC,EAAW,wBACX,MACJ,IAAK,aACDA,EAAW,cACX,MACJ,IAAK,UACDA,EAAW,WACX,MACJ,QACIA,EAAW,wBAInB,OAAOA,qBAjGMP","file":"./dist/0.js","sourcesContent":["import {API_CONSTANTS} from './constants';\r\n\r\nlet requesterInstance = null;\r\n\r\n/**\r\n * Class representing a request instance\r\n */\r\nexport default class NewsRequester {\r\n    /**\r\n     * Creates only one instance of requester\r\n     * @param {object} selectedValues - Selected values\r\n     */\r\n    constructor(selectedValues) {\r\n        if (!requesterInstance) {\r\n            requesterInstance = this;\r\n        }\r\n\r\n        requesterInstance._source = selectedValues.source;\r\n        requesterInstance._endpoint = selectedValues.endpoint;\r\n        requesterInstance._language = selectedValues.language;\r\n        requesterInstance._country = selectedValues.country;\r\n        requesterInstance._searchString = selectedValues.searchString;\r\n\r\n        return requesterInstance;\r\n    }\r\n\r\n    /**\r\n     * Make async request to the server, return articles\r\n     */\r\n    // example with async / await\r\n/*    async requestNews() {\r\n        const url = this._getNewsUrl();\r\n\r\n        try {\r\n            const response = await fetch(url);\r\n            const responseJson = await response.json();\r\n            return responseJson;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * Make a fetch request to the server, return promise\r\n     */\r\n    // example with fetch\r\n    requestNews() {\r\n        const url = this._getNewsUrl();\r\n        return fetch(url)\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(function (response) {\r\n                return response;\r\n            })\r\n            .catch(function (error) {\r\n                return (error);\r\n            });\r\n    }\r\n    /**\r\n     * Return request url\r\n     * @return {string} Url for request\r\n     */\r\n    _getNewsUrl() {\r\n        const endpoint = this._getEndpoint();\r\n        let url = `${API_CONSTANTS.URL_TO_API}${endpoint}=${this._source}&apiKey=${API_CONSTANTS.API_KEY}`;\r\n\r\n        if (this._searchString) {\r\n            url = `${url}&q=${this._searchString}`;\r\n        }\r\n\r\n        if (this._language) {\r\n            url = `${url}&language=${this._language}`;\r\n        }\r\n\r\n        if (this._country) {\r\n            url = `${url}&country=${this._country}`;\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Return endpoint url\r\n     * @return {string} Endpoint for url\r\n     */\r\n    _getEndpoint() {\r\n        let endpoint;\r\n\r\n        switch (this._endpoint) {\r\n            case 'top-headlines':\r\n                endpoint = 'top-headlines?sources';\r\n                break;\r\n            case 'everything':\r\n                endpoint = 'everything?';\r\n                break;\r\n            case 'sources':\r\n                endpoint = 'sources?';\r\n                break;\r\n            default:\r\n                endpoint = 'top-headlines?sources';\r\n                break;\r\n        }\r\n\r\n        return endpoint;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/newsRequester.js"],"sourceRoot":""}