{"version":3,"sources":["webpack:///./scripts/newsRequester.js"],"names":["requesterInstance","NewsRequester","selectedValues","_source","source","_endpoint","endpoint","_language","language","_country","country","_searchString","searchString","url","_getNewsUrl","fetch","then","response","json","catch","error","_getEndpoint","URL_TO_API","API_KEY"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AAEA,IAAIA,oBAAoB,IAAxB;;AAEA;;;;IAGqBC,a;AACjB;;;;AAIA,2BAAYC,cAAZ,EAA4B;AAAA;;AACxB,YAAI,CAACF,iBAAL,EAAwB;AACpBA,gCAAoB,IAApB;AACH;;AAEDA,0BAAkBG,OAAlB,GAA4BD,eAAeE,MAA3C;AACAJ,0BAAkBK,SAAlB,GAA8BH,eAAeI,QAA7C;AACAN,0BAAkBO,SAAlB,GAA8BL,eAAeM,QAA7C;AACAR,0BAAkBS,QAAlB,GAA6BP,eAAeQ,OAA5C;AACAV,0BAAkBW,aAAlB,GAAkCT,eAAeU,YAAjD;;AAEA,eAAOZ,iBAAP;AACH;;AAED;;;AAGA;AACJ;;;;;;;;;;;;AAYI;;;AAGA;;;;;sCACc;AACV,gBAAMa,MAAM,KAAKC,WAAL,EAAZ;AACA,mBAAOC,MAAMF,GAAN,EACFG,IADE,CACG,UAAUC,QAAV,EAAoB;AACtB,uBAAOA,SAASC,IAAT,EAAP;AACH,aAHE,EAIFF,IAJE,CAIG,UAAUC,QAAV,EAAoB;AACtB,uBAAOA,QAAP;AACH,aANE,EAOFE,KAPE,CAOI,UAAUC,KAAV,EAAiB;AACpB,uBAAQA,KAAR;AACH,aATE,CAAP;AAUH;AACD;;;;;;;sCAIc;AACV,gBAAMd,WAAW,KAAKe,YAAL,EAAjB;AACA,gBAAIR,WAAS,yBAAcS,UAAvB,GAAoChB,QAApC,SAAgD,KAAKH,OAArD,gBAAuE,yBAAcoB,OAAzF;;AAEA,gBAAI,KAAKZ,aAAT,EAAwB;AACpBE,sBAASA,GAAT,WAAkB,KAAKF,aAAvB;AACH;;AAED,gBAAI,KAAKJ,SAAT,EAAoB;AAChBM,sBAASA,GAAT,kBAAyB,KAAKN,SAA9B;AACH;;AAED,gBAAI,KAAKE,QAAT,EAAmB;AACfI,sBAASA,GAAT,iBAAwB,KAAKJ,QAA7B;AACH;;AAED,mBAAOI,GAAP;AACH;;AAED;;;;;;;uCAIe;AACX,gBAAIP,iBAAJ;;AAEA,oBAAQ,KAAKD,SAAb;AACI,qBAAK,eAAL;AACIC,+BAAW,uBAAX;AACA;AACJ,qBAAK,YAAL;AACIA,+BAAW,aAAX;AACA;AACJ,qBAAK,SAAL;AACIA,+BAAW,UAAX;AACA;AACJ;AACIA,+BAAW,uBAAX;AACA;AAZR;;AAeA,mBAAOA,QAAP;AACH;;;;;;kBAlGgBL,a","file":"0.bundle.js","sourcesContent":["import {API_CONSTANTS} from './constants';\r\n\r\nlet requesterInstance = null;\r\n\r\n/**\r\n * Class representing a request instance\r\n */\r\nexport default class NewsRequester {\r\n    /**\r\n     * Creates only one instance of requester\r\n     * @param {object} selectedValues - Selected values\r\n     */\r\n    constructor(selectedValues) {\r\n        if (!requesterInstance) {\r\n            requesterInstance = this;\r\n        }\r\n\r\n        requesterInstance._source = selectedValues.source;\r\n        requesterInstance._endpoint = selectedValues.endpoint;\r\n        requesterInstance._language = selectedValues.language;\r\n        requesterInstance._country = selectedValues.country;\r\n        requesterInstance._searchString = selectedValues.searchString;\r\n\r\n        return requesterInstance;\r\n    }\r\n\r\n    /**\r\n     * Make async request to the server, return articles\r\n     */\r\n    // example with async / await\r\n/*    async requestNews() {\r\n        const url = this._getNewsUrl();\r\n\r\n        try {\r\n            const response = await fetch(url);\r\n            const responseJson = await response.json();\r\n            return responseJson;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * Make a fetch request to the server, return promise\r\n     */\r\n    // example with fetch\r\n    requestNews() {\r\n        const url = this._getNewsUrl();\r\n        return fetch(url)\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(function (response) {\r\n                return response;\r\n            })\r\n            .catch(function (error) {\r\n                return (error);\r\n            });\r\n    }\r\n    /**\r\n     * Return request url\r\n     * @return {string} Url for request\r\n     */\r\n    _getNewsUrl() {\r\n        const endpoint = this._getEndpoint();\r\n        let url = `${API_CONSTANTS.URL_TO_API}${endpoint}=${this._source}&apiKey=${API_CONSTANTS.API_KEY}`;\r\n\r\n        if (this._searchString) {\r\n            url = `${url}&q=${this._searchString}`;\r\n        }\r\n\r\n        if (this._language) {\r\n            url = `${url}&language=${this._language}`;\r\n        }\r\n\r\n        if (this._country) {\r\n            url = `${url}&country=${this._country}`;\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Return endpoint url\r\n     * @return {string} Endpoint for url\r\n     */\r\n    _getEndpoint() {\r\n        let endpoint;\r\n\r\n        switch (this._endpoint) {\r\n            case 'top-headlines':\r\n                endpoint = 'top-headlines?sources';\r\n                break;\r\n            case 'everything':\r\n                endpoint = 'everything?';\r\n                break;\r\n            case 'sources':\r\n                endpoint = 'sources?';\r\n                break;\r\n            default:\r\n                endpoint = 'top-headlines?sources';\r\n                break;\r\n        }\r\n\r\n        return endpoint;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/newsRequester.js"],"sourceRoot":""}